extends /main/layouts/generic

include /main/mixins/comment

block title
    title= `peppermint - ${project.title || project.id}`

block postHead
    link(rel="stylesheet" href="/css/project/style.css" type="text/css")
    link(rel="stylesheet" href="/css/project/comment.css" type="text/css")

    script.
        $(document).ready(() => {
            if ($(".comment-editor") && $(".comment-editor form textarea").val()) $(".comment-editor form button").prop("disabled", false);
            if ($(".comment-editor")[0]) {
                $(".comment-editor form textarea").trigger("oninput");
                $(".comment-editor form textarea")[0].addEventListener("keydown", e => {
                    if (e.keyCode == 13 && e.ctrlKey) {
                        $(".comment-editor form button").trigger("click");
                    }
                })
            }            
        });

    script.
        $(document).ready(() => {
            const userID = "#{req.user.id}";
            $(`.comment[data-user-id=${CSS.escape(userID)}]`).toArray().forEach(x => {
                let thing = $(`
                <div class="position-absolute w-100 h-100 d-flex justify-content-center align-items-center delete-overlay">
                    <div class="delete-comment">
                        <div class="d-flex align-items-center delete-comment-content">
                            <i class="fa-solid fa-dumpster-fire me-2"></i>
                            <div>click to delete</div>
                        </div>
                    </div>
                </div>
                `)
                $(x).prepend(thing);
                let commentID = $(thing).parent().attr("data-comment-id");
                console.log(`pain: ${commentID}`);
                $(thing).find(".delete-comment").on("click", async e => {
                    $(`.comment[data-comment-id=${CSS.escape(commentID)}] .delete-comment-content`).html(`<i class="fa-solid fa-spinner fa-spin"></i>`);
                    
                    try {
                        let res = await $.ajax({
                            url: `/api/comment/${commentID}`,
                            method: "DELETE"
                        });

                        if (res.status == 200) {
                            $(`.comment-delete-message`).css("color", "var(--bs-success)");
                            $(`.comment-delete-message`).text("deleted comment successfully.");
                            $(`.comment[data-comment-id=${CSS.escape(commentID)}]`).remove();
                        }
                    } catch (e) {
                        $(`.comment-delete-message`).css("color", "var(--bs-danger)");
                        $(`.comment-delete-message`).text("couldn't delete comment.");
                    }
                });
            })
        });

block content
    - if (canManage)
        a.btn.btn-primary.mb-2(href=`/manage/${project.id}`) #[i.fa-solid.fa-pen-to-square(style="margin-right: 5px;")] manage
    h1.mb-4.clmp= project.title || project.id
    .main-image
    .d-flex.row
        .col-12.col-md-6
            .mb-3
                .preview-image(style=`background-image: url(${req.cssurl(project.iconURL)}), url(/img/image-unavailable.svg)`)
            h4 description
            p.mb-3.mb-md-0= project.description || "no description provided."
        .col-12.col-md-6
            - if (project.contributors.length)
                .mb-3
                    h4 contributors
                    - for (let i = 0; i < project.contributors.length; i++)
                        .contributor(class=(i != project.contributors.length - 1 ? "mb-3" : ""))
                            a(href=`/user/${project.contributors[i].handle}`).d-flex.align-items-center
                                .profile-image.me-2(style=`background-image: url(${req.cssurl(project.contributors[i].iconURL || "")}), url(/img/user-unavailable.svg)`)
                                .names.d-flex.flex-column
                                    .username.clmp= project.contributors[i].displayName
                                    small.handle.clmp
                                        span.user-select-none @
                                        span= project.contributors[i].handle
            h4 releases #[small.extra.ms-2 click a release for more]
            .releases
                - if (!releases || !releases.length)
                    p.mb-0 this project has no releases.
                - for (let i = 0; i < releases.length; i++)
                    .release
                        a.w-100(href=`/project/${project.id}/release/${releases[i].timestamp}` class=(i != releases.length - 1 ? "mb-1" : ""))
                            .d-flex.justify-content-between
                                .d-flex.flex-column.me-2
                                    h5.mb-0.clmp= releases[i].version || "new version"
                                    small= new Date(releases[i].timestamp).toLocaleDateString("en-gb", { year: "numeric", month: "numeric", day: "numeric" })
                                .d-flex.align-items-center
                                    a.btn.btn-primary.download-button(href=`/project/${project.id}/release/${releases[i].timestamp}/download` target="__blank")
                                        i.fa-solid.fa-download
    if (canComment || (comments && comments.length))
        hr
        .comments
            h4 comments
            .comment-delete-message.mb-2
            .d-flex.flex-column
                if (canComment)
                    .comment-editor(class=(comments && comments.length ? "mb-4" : ""))
                        form(method="POST" action=`/project/${project.id}/comment`)
                            .comment.d-flex
                                .profile-picture(style=`background-image: url(${req.cssurl(req.user.iconURL)}), url(/img/user-unavailable.svg);`)
                                .comment-text.ms-2.flex-fill
                                    .handle.clmp
                                        span.user-select-none @
                                        span= req.user.handle
                                    .comment-content
                                        textarea.form-control(name="content" rows="1" oninput="this.style.height = \"\"; this.style.height = this.scrollHeight + \"px\"; $(\".comment-editor form button\").prop(\"disabled\", $(this).val() ? false : true);" placeholder="write a comment")= req.query ? req.query.commentContent || "" : ""
                                    if (req.query && req.query.commentError)
                                        p.mb-0(style="color: red;")= req.query.commentError
                                    button.btn.btn-primary.mt-2(type="submit" disabled) comment
                - for (let i = 0; i < comments.length; i++)
                    +comment(comments[i], "position-relative " + (i != comments.length - 1 ? "mb-3" : ""))